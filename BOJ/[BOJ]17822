#include<iostream>
#include<math.h>
#include<vector>
#include<algorithm>
#include<queue>
int n, m, t;
using namespace std;
deque<int> dq[51];
int arr[51][51];
void cmp()
{
	bool check = true;
	for (int i = 0; i < n; i++)   //같은 원에서 인접한것 check
	{
		for (int j = 0; j < m; j++)
		{
			if (dq[i][j] != 0)
			{
				if (j == m - 1)
				{
					if (dq[i][j] == dq[i][0])
					{
						check = false;
						arr[i][j] = 1;
						arr[i][0] = 1;
					}
				}
				else
				{
					if (dq[i][j] == dq[i][j + 1])
					{
						check = false;
						arr[i][j] = 1;
						arr[i][j + 1] = 1;
					}
				}
			}
		}
	}

	for (int i = 0; i < n-1; i++) //다른원끼리 인접한것 체크
	{
		for (int j = 0; j < m; j++)
		{
			if (dq[i][j] == dq[i + 1][j] && dq[i][j] !=0)
			{
				check = false;
				arr[i][j] = 1;
				arr[i + 1][j] = 1;
			}
		}
	}

	int sum = 0, count = 0;
	if (check) //하나도 바뀌지 않은 경우 평균 구해주기
	{
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < m; j++)
			{
				if (dq[i][j] != 0)
				{
					sum += dq[i][j];
					count++;

				}
			}
		}
		float avg = (float)sum / (float)count;
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < m; j++)
			{
				if (dq[i][j] != 0)
				{
					if (dq[i][j] < avg)
						dq[i][j] += 1;
					else if(dq[i][j] > avg)
						dq[i][j] -= 1;
				}
			}
		}
	}

	else 
	{
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < m; j++)
			{
				if (arr[i][j] == 1)
				{
					dq[i][j] = 0;
					arr[i][j] = 0;
				}
			}
		}
	}
}

void check(int x, int d, int k)
{
	while (k--)
	{
		if (d == 0) //시계방향
		{
			dq[x].push_front(dq[x].back());
			dq[x].pop_back();
		}
		else//반시계방향
		{
			dq[x].push_back(dq[x].front());
			dq[x].pop_front();

		}
	}
}

int main()
{
	cin >> n >> m >> t;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			int tmp;
			cin >> tmp;
			dq[i].push_back(tmp);
		}
	}

	for (int i = 0; i < t; i++)
	{
		int x, d, k;
		cin >> x >> d >> k;
		int tmp = 1;
		while (x*tmp <=n)
		{
			check((x *tmp)- 1, d, k);
			tmp++;
		}
		cmp();
	}
	int answer = 0;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			answer += dq[i][j];
		}
	}

	cout << answer << endl;
	return 0;

}
