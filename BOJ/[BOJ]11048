#include<iostream>
#include<queue>
#define MAX 101
using namespace std;

int n, m, arr[MAX][MAX], visit[MAX][MAX];
int dx[4] = { 0,0,1,-1 };
int dy[4] = { 1,-1,0,0 };

int main()
{
	int answer = 0;

	cin >> n >> m;
	for (int i = 0; i < n; i++)
	{
		string tmp;
		cin >> tmp;
		for (int j = 0; j < m; j++)
		{
			arr[i][j] = (int)tmp[j]-48;
		}
	}

	queue<pair<int, int>> q;
	q.push({ 0,0 });
	visit[0][0] = 1;
	while (!q.empty())
	{
		answer++;
		int size = q.size();
		while (size--)
		{
			int x = q.front().first;
			int y = q.front().second;
			q.pop();

			if (x == n - 1 && y == m - 1)
			{
				cout << answer;
				break;
			}
			for (int i = 0; i < 4; i++)
			{
				int nx = x + dx[i];
				int ny = y + dy[i];

				if (nx < 0 || ny < 0 || nx >= n || ny >= m || visit[nx][ny]==1||arr[nx][ny]==0)continue;
				else
				{
					q.push({ nx, ny });
					visit[nx][ny] = 1;
				}
			}
		}
	}

	return 0;
}
