#include<iostream>
#include<queue>
#include<vector>
using namespace std;
char arr[51][51];
int r, c;
queue<pair<int, int>> q;
vector<pair<int, int>> water;
int dx[4] = { 0,0,1,-1 };
int dy[4] = { 1,-1,0,0 };
int visit[51][51] ;

void bfs()
{
	int answer = 0;
	while (!q.empty())
	{
		int size = q.size();
		answer++;


		int w_size = water.size();
		for (int i = 0; i < w_size; i++) //물 퍼져나가기
		{
			int water_x = water[i].first;
			int water_y = water[i].second;
			for (int j = 0; j < 4; j++)
			{
				int nx = water_x + dx[j];
				int ny = water_y + dy[j];
				if (nx < 0 || ny < 0 || nx >= r || ny >= c)
				{
					continue;
				}
				if (arr[nx][ny] == '.')
				{
					arr[nx][ny] = '*';
					water.push_back({ nx,ny });

				}
			}
		}


		while (size--)
		{
			int x = q.front().first;
			int y = q.front().second;
			q.pop();
			for (int i = 0; i < 4; i++)
			{
				int nx = x + dx[i];
				int ny = y + dy[i];
				if (nx < 0 || ny < 0 || nx >= r || ny >= c)
				{
					continue;
				}
				if (arr[nx][ny] == 'D') // 비버 굴
				{
					cout << answer << endl;
					return;
				}
				if (visit[nx][ny] == 1 || arr[nx][ny] == '*')
				{
					continue;
				}
				else if (arr[nx][ny] == '.')
				{
					visit[nx][ny] = 1;
					q.push({ nx,ny });
				}
			}
		}

		
	}

	cout << "KAKTUS" << endl;
}

int main()
{
	cin >> r >> c;
	for (int i = 0; i < r; i++)
	{
		string tmp;
		cin >> tmp;
		int len = tmp.length();
		for (int j = 0; j < len; j++)
		{
			if (tmp[j] == 'S')
			{
				q.push({ i,j });
				visit[i][j] = 1;
			}
			else if (tmp[j] == '*')
			{
				water.push_back({ i,j });
			}
			arr[i][j] = tmp[j];
		}
	}

	bfs();

	return 0;
}
