#include <map>
#include <string>
#include <vector>
#include <algorithm>
#include<iostream>
#include<math.h>
using namespace std;
int gen[4][1024];	//세대 방향값 저장
int dx[4] = { 1,0,-1,0 };
int dy[4] = { 0,-1,0,1 };
int v[21][4];
int MAP[101][101];
int answer;

void make()
{
	gen[0][0] = 0;
	gen[1][0] = 1;
	gen[2][0] = 2;
	gen[3][0] = 3;

	for (int i = 0; i < 4; i++)
	{
		for (int j = 1; j <= 10; j++)
		{
			int start = pow(2, j-1);
			int end = pow(2, j) - 1;
			int idx = 1;
			for (int k = start; k <= end; k++)
			{
				gen[i][k] = (gen[i][k - idx] + 1)%4;
				idx+=2;
			}
		}
	}
}

void go(int x, int y, int dir, int g)
{
	int start = 0;
	int end = pow(2, g)-1;
	MAP[x][y] = 1;
	for (int i = start; i <= end; i++)
	{
		x = x + dx[gen[dir][i]];
		y = y + dy[gen[dir][i]];
		MAP[x][y] = 1;
	}
}

void RTG_check()
{
	for (int i = 0; i <= 99; i++)
	{
		for (int j = 0; j <= 99; j++)
		{
			if (MAP[i][j] == 1 && MAP[i + 1][j] == 1 && MAP[i][j + 1] == 1 && MAP[i + 1][j + 1] == 1)
			{
				answer++;
			}
		}
	}
}

int main()
{
	int n;
	cin >> n;
	make(); //세대 방향
	for (int i = 0; i < n; i++)
	{
		int x, y, dir, g;
		cin >> x >> y >> dir >> g;

		go(x, y, dir, g);
	}

	RTG_check();//사각형 체크
	cout << answer << endl;
	
}
