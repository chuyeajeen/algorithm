#include <iostream>
#include <vector>
#include<algorithm>
using namespace std;

int  arr[1002], dp[1002][31];
int time, change;

void solution()
{
	for (int i = 1; i <= time; i++)
	{
		int tree = arr[i];
		for (int j = 0; j <= change; j++)
		{
			if (j == 0)
			{
				if (tree == 1)
				{
					dp[i][j] = dp[i - 1][j] + 1;
				}
				else
				{
					dp[i][j] = dp[i - 1][j];
				}
				continue;
			}
			else if (j % 2 == 0)
			{
				if (tree == 1)
				{
					dp[i][j] = max(dp[i - 1][j - 1], dp[i - 1][j] + 1);
				}
				else
				{
					dp[i][j] = max(dp[i - 1][j - 1]+1, dp[i - 1][j] );
				}
			}
			else
			{
				if (tree == 2)
				{
					dp[i][j] = max(dp[i - 1][j - 1], dp[i - 1][j] + 1);
				}
				else
				{
					dp[i][j] = max(dp[i - 1][j - 1] + 1, dp[i - 1][j]);
				}

			}
		}
	}

	int answer = 0;
	for (int i = 0; i <= change; i++)
	{
		if (answer < dp[time][i])
			answer = dp[time][i];
	}
	cout << answer << endl;
}

int main()
{
	cin >> time >> change;

	for (int i = 1; i <= time; i++)
	{
		cin >> arr[i];
	}

	solution();
	return 0;
}
